import React, { useState } from "react";
import { InterestSelector } from "./InterestSelector";

function SocialLinkEdit({ label, icon, value, onChange, placeholder }: { label: string, icon: string, value: string, onChange: (v: string) => void, placeholder: string }) {
  const [input, setInput] = useState(value || "");
  React.useEffect(() => { setInput(value || ""); }, [value]);
  if (value) {
    return (
      <div className="flex items-center gap-2 bg-dark-bg/60 rounded-xl px-3 py-2 shadow-inner">
        <span className="text-xl">{icon}</span>
        <a href={value} target="_blank" rel="noopener noreferrer" className="flex-1 text-blue-400 underline text-sm truncate">{value}</a>
        <button className="text-red-500 text-xs px-2" onClick={() => onChange("")} title="–û—Ç–≤—è–∑–∞—Ç—å"><span style={{fontSize: '1.2em'}}>‚úñ</span></button>
      </div>
    );
  }
  return (
    <div className="flex items-center gap-2 bg-dark-bg/60 rounded-xl px-3 py-2 shadow-inner">
      <span className="text-xl">{icon}</span>
      <input
        className="flex-1 bg-transparent outline-none text-base text-dark-text"
        value={input}
        onChange={e => setInput(e.target.value)}
        placeholder={placeholder}
        maxLength={80}
      />
      <button className="text-blue-500 text-xs px-2" onClick={() => { if (input.trim()) { onChange(input.trim()); } }} title="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"><span style={{fontSize: '1.2em'}}>üíæ</span></button>
    </div>
  );
}

export function WelcomePage({ onFinish }: { onFinish: (profile: any) => void }) {
  const [step, setStep] = useState(0);
  const [profile, setProfile] = useState({
    name: "",
    city: "",
    vk: "",
    youtube: "",
    telegram: "",
    interests: [] as string[],
  });
  // –ù–æ–≤—ã–π –ø–æ—Ä—è–¥–æ–∫ —ç—Ç–∞–ø–æ–≤: 0 - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, 1 - –ø—Ä–æ—Ñ–∏–ª—å, 2 - –∏–Ω—Ç–µ—Ä–µ—Å—ã, 3 - —Å–æ—Ü—Å–µ—Ç–∏, 4 - –≥–æ—Ç–æ–≤–æ
  const steps = [
    "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!",
    "–ü—Ä–æ—Ñ–∏–ª—å",
    "–ò–Ω—Ç–µ—Ä–µ—Å—ã",
    "–°–æ—Ü—Å–µ—Ç–∏",
    "–ì–æ—Ç–æ–≤–æ!"
  ];
  const next = () => setStep(s => Math.min(s + 1, steps.length - 1));
  const prev = () => setStep(s => Math.max(s - 1, 0));
  // --- UI ---
  return (
    <div className="fixed inset-0 z-50 flex items-center justify-center bg-gradient-to-br from-dark-bg via-dark-card to-dark-bg/80 animate-fade-in" style={{minHeight: '100dvh'}}>
      <div className="w-full max-w-md bg-dark-card rounded-2xl shadow-2xl p-8 flex flex-col gap-8 animate-fade-in animate-scale-in">
        <div className="flex flex-col items-center gap-2">
          <div className="w-full flex items-center gap-2 mb-4">
            {steps.map((t, i) => (
              <div key={i} className={`flex-1 h-2 rounded-full transition-all ${i <= step ? 'bg-gradient-to-r from-blue-400 to-pink-400' : 'bg-dark-bg/40'}`}></div>
            ))}
          </div>
        </div>
        {step === 0 && (
          <div className="relative flex flex-col items-center gap-8 animate-fade-in">
            {/* SVG —Ñ–æ–Ω–æ–≤—ã–µ –≤–æ–ª–Ω—ã */}
            <svg
              className="absolute -top-24 left-0 w-full h-[220px] pointer-events-none select-none z-0"
              viewBox="0 0 600 220"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              style={{filter: 'blur(0.5px)'}}
            >
              <defs>
                <linearGradient id="wave1" x1="0" y1="0" x2="600" y2="220" gradientUnits="userSpaceOnUse">
                  <stop stopColor="#4F8CFF"/>
                  <stop offset="1" stopColor="#f472b6"/>
                </linearGradient>
                <linearGradient id="wave2" x1="0" y1="0" x2="600" y2="220" gradientUnits="userSpaceOnUse">
                  <stop stopColor="#38BDF8"/>
                  <stop offset="1" stopColor="#a78bfa"/>
                </linearGradient>
              </defs>
              <path d="M0 120 Q150 180 300 120 T600 120 V220 H0Z" fill="url(#wave1)" fillOpacity="0.18"/>
              <path d="M0 160 Q200 100 400 160 T600 160 V220 H0Z" fill="url(#wave2)" fillOpacity="0.13"/>
            </svg>
            {/* –õ–æ–≥–æ—Ç–∏–ø Mooza —Å Pacifico –∏ –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º */}
            <div className="flex flex-col items-center gap-2 w-full z-10">
              <span
                className="text-5xl font-bold mb-2 select-none"
                style={{
                  fontFamily: 'Pacifico, cursive',
                  letterSpacing: '0.04em',
                  background: 'linear-gradient(90deg,#4F8CFF,#38BDF8,#f472b6 80%)',
                  WebkitBackgroundClip: 'text',
                  WebkitTextFillColor: 'transparent',
                  display: 'inline-block',
                }}
              >
                Mooza
              </span>
              <span className="text-lg text-dark-accent font-semibold tracking-wide mt-6 animate-fade-in" style={{letterSpacing: '0.03em'}}>–ú—É–∑—ã–∫–∞–ª—å–Ω–∞—è —Å–æ—Ü—Å–µ—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è</span>
            </div>
            {/* –ò–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è –∏–ª–∏ –∏–∫–æ–Ω–∫–∞ */}
            <div className="w-full flex justify-center z-10">
              <span className="block text-[80px] md:text-[100px] select-none animate-bounce-slow" role="img" aria-label="music">üé∏üé§üéß</span>
            </div>
            {/* –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ */}
            <div className="text-dark-muted text-center text-base mb-4 max-w-md animate-fade-in z-10">
              <span className="font-semibold text-dark-accent">Mooza</span> ‚Äî —ç—Ç–æ –º–µ—Å—Ç–æ, –≥–¥–µ –º—É–∑—ã–∫–∞–Ω—Ç—ã, –ø—Ä–æ–¥—é—Å–µ—Ä—ã –∏ –º–µ–ª–æ–º–∞–Ω—ã –Ω–∞—Ö–æ–¥—è—Ç –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤, —Å–æ–∑–¥–∞—é—Ç –∫–æ–ª–ª–∞–±–æ—Ä–∞—Ü–∏–∏ –∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—Ç—Å—è –¥—Ä—É–≥ –¥—Ä—É–≥–æ–º.<br/>
              <span className="text-dark-accent">–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π –º—É–∑—ã–∫–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å —Å–æ–æ–±—â–µ—Å—Ç–≤–æ–º!</span>
            </div>
            <button className="px-8 py-4 rounded-2xl bg-gradient-to-r from-blue-500 to-pink-400 text-white font-bold shadow-lg text-xl active:scale-95 transition-all animate-fade-in animate-scale-in mt-2 z-10" onClick={next} style={{letterSpacing: '0.04em'}}>–ù–∞—á–∞—Ç—å</button>
          </div>
        )}
        {step === 1 && (
          <div className="flex flex-col gap-4 animate-fade-in">
            <div className="text-xl font-bold text-dark-text mb-2">–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å</div>
            {/* –ö–Ω–æ–ø–∫–∏ OAuth */}
            <div className="flex flex-col gap-3 mb-2">
              <button
                className="flex items-center gap-2 px-4 py-3 rounded-xl bg-[#2787F5] text-white font-semibold shadow hover:opacity-90 active:scale-95 transition-all text-base justify-center"
                onClick={() => alert('OAuth VK: –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤ –¥–µ–º–æ-–≤–µ—Ä—Å–∏–∏ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞. –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤—Ä—É—á–Ω—É—é.')}
                type="button"
              >
                <svg width="22" height="22" fill="none" viewBox="0 0 24 24"><circle cx="12" cy="12" r="10" fill="#2787F5"/><text x="7" y="16" fontSize="10" fill="#fff">VK</text></svg>
                –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ VK
              </button>
              <button
                className="flex items-center gap-2 px-4 py-3 rounded-xl bg-[#229ED9] text-white font-semibold shadow hover:opacity-90 active:scale-95 transition-all text-base justify-center"
                onClick={() => alert('OAuth Telegram: –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤ –¥–µ–º–æ-–≤–µ—Ä—Å–∏–∏ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞. –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤—Ä—É—á–Ω—É—é.')}
                type="button"
              >
                <svg width="22" height="22" fill="none" viewBox="0 0 24 24"><circle cx="12" cy="12" r="10" fill="#229ED9"/><text x="5" y="16" fontSize="10" fill="#fff">TG</text></svg>
                –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Telegram
              </button>
              <button
                className="flex items-center gap-2 px-4 py-3 rounded-xl bg-[#FFCC00] text-black font-semibold shadow hover:opacity-90 active:scale-95 transition-all text-base justify-center"
                onClick={() => alert('OAuth Yandex: –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤ –¥–µ–º–æ-–≤–µ—Ä—Å–∏–∏ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞. –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤—Ä—É—á–Ω—É—é.')}
                type="button"
              >
                <svg width="22" height="22" fill="none" viewBox="0 0 24 24"><circle cx="12" cy="12" r="10" fill="#FFCC00"/><text x="4" y="16" fontSize="10" fill="#000">–Ø–Ω–¥–µ–∫—Å</text></svg>
                –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ –Ø–Ω–¥–µ–∫—Å
              </button>
            </div>
            <div className="text-dark-muted text-xs text-center mb-2">–ò–ª–∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤—Ä—É—á–Ω—É—é</div>
            <input
              className="px-4 py-3 rounded-xl bg-dark-bg/60 text-dark-text shadow-inner focus:ring-2 focus:ring-blue-400 text-base"
              placeholder="–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è"
              value={profile.name}
              onChange={e => setProfile(p => ({ ...p, name: e.target.value }))}
              maxLength={40}
              autoFocus
            />
            <div className="flex gap-2">
              <input
                className="flex-1 px-4 py-3 rounded-xl bg-dark-bg/60 text-dark-text shadow-inner focus:ring-2 focus:ring-blue-400 text-base"
                placeholder="–ì–æ—Ä–æ–¥"
                value={profile.city}
                onChange={e => setProfile(p => ({ ...p, city: e.target.value }))}
                maxLength={40}
              />
              <button
                className="px-3 py-2 rounded-xl bg-dark-accent text-white font-semibold shadow active:scale-95 transition-all text-sm"
                style={{minWidth: 0}}
                type="button"
                title="–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏"
                onClick={async () => {
                  if (!navigator.geolocation) {
                    alert('–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤–∞—à–∏–º –±—Ä–∞—É–∑–µ—Ä–æ–º');
                    return;
                  }
                  navigator.geolocation.getCurrentPosition(async (pos) => {
                    const { latitude, longitude } = pos.coords;
                    try {
                      const resp = await fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&accept-language=ru`);
                      const data = await resp.json();
                      const city = data.address.city || data.address.town || data.address.village || data.address.settlement || data.address.state || '';
                      if (city) {
                        setProfile(prev => ({ ...prev, city }));
                      } else {
                        alert('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≥–æ—Ä–æ–¥ –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º');
                      }
                    } catch {
                      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –≥–æ—Ä–æ–¥–∞');
                    }
                  }, (err) => {
                    alert('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é: ' + err.message);
                  });
                }}
              >
                üìç
              </button>
            </div>
            <div className="flex gap-2 mt-2">
              <button className="flex-1 py-3 rounded-xl bg-gradient-to-r from-blue-500 to-cyan-400 text-white font-semibold shadow active:scale-95 transition-transform text-lg" onClick={next} disabled={!profile.name || !profile.city}>–î–∞–ª–µ–µ</button>
              <button className="flex-1 py-3 rounded-xl bg-dark-bg/60 text-dark-muted font-semibold shadow active:scale-95 transition-transform text-lg" onClick={prev}>–ù–∞–∑–∞–¥</button>
            </div>
          </div>
        )}
        {step === 2 && (
          <div className="flex flex-col gap-4 animate-fade-in">
            <div className="text-xl font-bold text-dark-text mb-2">–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã <span className="text-pink-400">*</span></div>
            <div className="text-dark-muted text-sm mb-2">–ù–∞ –æ—Å–Ω–æ–≤–µ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ Mooza –ø–æ–¥–±–∏—Ä–∞–µ—Ç –¥–ª—è –≤–∞—Å –ª—É—á—à–∏—Ö —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏. –í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã 3 –∏–Ω—Ç–µ—Ä–µ—Å–∞!</div>
            <InterestSelector selected={profile.interests} onChange={interests => setProfile(p => ({ ...p, interests }))} profileInterests={[]} disableMineMode={true} />
            <div className="flex gap-2 mt-2">
              <button className="flex-1 py-3 rounded-xl bg-gradient-to-r from-blue-500 to-cyan-400 text-white font-semibold shadow active:scale-95 transition-transform text-lg" onClick={next} disabled={profile.interests.length < 3}>–î–∞–ª–µ–µ</button>
              <button className="flex-1 py-3 rounded-xl bg-dark-bg/60 text-dark-muted font-semibold shadow active:scale-95 transition-transform text-lg" onClick={prev}>–ù–∞–∑–∞–¥</button>
            </div>
          </div>
        )}
        {step === 3 && (
          <div className="flex flex-col gap-4 animate-fade-in">
            <div className="text-xl font-bold text-dark-text mb-2">–ü—Ä–∏–≤—è–∂–∏—Ç–µ —Å–æ—Ü—Å–µ—Ç–∏</div>
            <SocialLinkEdit label="VK" icon="üü¶" value={profile.vk} onChange={vk => setProfile(p => ({ ...p, vk }))} placeholder="–°—Å—ã–ª–∫–∞ –Ω–∞ VK" />
            <SocialLinkEdit label="YouTube" icon="‚ñ∂Ô∏è" value={profile.youtube} onChange={youtube => setProfile(p => ({ ...p, youtube }))} placeholder="–°—Å—ã–ª–∫–∞ –Ω–∞ YouTube" />
            <SocialLinkEdit label="Telegram" icon="‚úàÔ∏è" value={profile.telegram} onChange={telegram => setProfile(p => ({ ...p, telegram }))} placeholder="–°—Å—ã–ª–∫–∞ –Ω–∞ Telegram" />
            <div className="flex gap-2 mt-2">
              <button className="flex-1 py-3 rounded-xl bg-gradient-to-r from-blue-500 to-cyan-400 text-white font-semibold shadow active:scale-95 transition-transform text-lg" onClick={next}>–î–∞–ª–µ–µ</button>
              <button className="flex-1 py-3 rounded-xl bg-dark-bg/60 text-dark-muted font-semibold shadow active:scale-95 transition-transform text-lg" onClick={prev}>–ù–∞–∑–∞–¥</button>
            </div>
          </div>
        )}
        {step === 4 && (
          <InviteStep onFinish={() => onFinish(profile)} />
        )}
      </div>
    </div>
  );
}

function InviteStep({ onFinish }: { onFinish: () => void }) {
  const [invited, setInvited] = React.useState(false);
  const [skipped, setSkipped] = React.useState(false);
  return (
    <div className="flex flex-col items-center gap-8 animate-fade-in">
      <div className="text-2xl font-bold text-dark-text mb-2">–ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ!</div>
      <div className="text-dark-muted text-center text-base mb-2 max-w-md">
        –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–∑–µ–π –∏–∑ —Å–≤–æ–∏—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –∏ –ø–æ–ª—É—á–∏—Ç–µ <span className="text-dark-accent font-semibold">–±–æ–Ω—É—Å: +10 Moo–∑–∏–∫–æ–≤</span> –∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω–æ–≥–æ!<br/>
        –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –±—ã—Å—Ç—Ä–µ–µ –Ω–∞–π—Ç–∏ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤ –∏ —Å–¥–µ–ª–∞—Ç—å Mooza –µ—â—ë –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ.
      </div>
      {!invited && !skipped && (
        <>
          <button
            className="px-6 py-3 rounded-xl bg-gradient-to-r from-blue-500 to-pink-400 text-white font-semibold shadow active:scale-95 transition-all text-lg"
            onClick={() => { alert('–ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –≤ –º–æ–±–∏–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∏–ª–∏ –ø—Ä–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏.'); setInvited(true); }}
          >
            –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –∏–∑ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
          </button>
          <button
            className="px-6 py-3 rounded-xl bg-dark-bg/60 text-dark-muted font-semibold shadow active:scale-95 transition-all text-lg mt-2"
            onClick={() => setSkipped(true)}
          >
            –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å
          </button>
        </>
      )}
      {(invited || skipped) && (
        <button
          className="px-8 py-4 rounded-2xl bg-gradient-to-r from-blue-500 to-cyan-400 text-white font-bold shadow-lg text-xl active:scale-95 transition-all animate-fade-in animate-scale-in mt-2"
          onClick={onFinish}
        >
          –ó–∞–≤–µ—Ä—à–∏—Ç—å
        </button>
      )}
    </div>
  );
} 